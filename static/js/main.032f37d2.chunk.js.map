{"version":3,"sources":["logo.svg","Components/Navbar.js","Components/TextForm.js","Components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","Mode","href","title","type","id","aboutUs","TextColor","onClick","toggleMode","role","htmlFor","Stext","TextForm","useState","text","subText","heading","value","onChange","event","target","rows","newText","toUpperCase","showAlert","toLowerCase","navigator","clipboard","writeText","split","join","length","Alert","alert","word","lower","charAt","slice","capitalize","msg","App","setMode","textColor","setTextColor","stext","setStext","setAlert","message","setTimeout","document","body","style","backgroundColor","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.032f37d2.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import { Link } from 'react-router-dom'\r\n\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav className={ `navbar navbar-expand-lg navbar-${props.Mode} bg-${props.Mode}`}>\r\n      <div className=\"container-fluid\">\r\n        <a className=\"navbar-brand\" href=\"/\">{props.title}</a>\r\n        <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">Home</a>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link\" href=\"/about\">{props.aboutUs}</a>\r\n            </li>\r\n          </ul>\r\n          {/* <form className=\"d-flex\">\r\n        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n        <button className=\"btn btn-primary\" type=\"submit\">Search</button>\r\n      </form> */}\r\n          <div className={`form-check form-switch text-${props.TextColor}`}>\r\n            <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n            <label className =\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">{props.Stext}</label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\nNavbar.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  aboutUs: PropTypes.string.isRequired\r\n}\r\n// Navbar.defaultProps = {\r\n//     title : \"GiveTitle\",\r\n//     aboutUs :  \"GiveInfo\"\r\n// }","import React, {useState} from \"react\";\r\n\r\nexport default function TextForm(props) {\r\n  const countWord = ()=>{\r\n    \r\n  }\r\n  const handleUpClick = ()=>{\r\n    //   console.log(\"UpperCase was Cliked\");\r\n      let newText = text.toUpperCase();\r\n      subText(newText);\r\n      props.showAlert(\"Converted to Uppercase\",\"success\");\r\n  }\r\n  const handleloClick = ()=>{\r\n    //   console.log(\"UpperCase was Cliked\");\r\n      let newText = text.toLowerCase();\r\n      subText(newText);\r\n      props.showAlert(\"Converted to Lowercase\",\"success\");\r\n  }\r\n  const handleCopyClick = ()=>{\r\n    navigator.clipboard.writeText(text);\r\n    props.showAlert(\"Copy to clipboard\",\"success\");\r\n  }\r\n  const handleExtraSpace = ()=>{\r\n    let newText = text.split(/[ ]+/);\r\n    subText(newText.join(\" \"));\r\n    props.showAlert(\"Removed Extra Spaces\",\"success\");\r\n  }\r\n\r\n  const handleClearClick = ()=>{\r\n    //   console.log(\"UpperCase was Clicked\");\r\n      let newText = \"\";\r\n      subText(newText);\r\n      props.showAlert(\"Text Cleared\",\"success\");\r\n  }\r\n  const handleOnChange = (event)=>{\r\n    //   console.log(\"onChange\");\r\n      subText(event.target.value)\r\n  }\r\n  const [text,subText] = useState(\"Enter Text Here\");\r\n//   text = \"new Text\" // wrong way to change state\r\n//  subText(\"new Text\"); // correct way to change state\r\n  return (\r\n    <>\r\n    <div className={`container text-${props.TextColor} bg-${props.Mode}`}>\r\n      <h1>{props.heading}</h1>\r\n      <div className=\"mb-3\">\r\n        <textarea className=\"form-control\" value={text} onChange={handleOnChange} id=\"mybox\" rows=\"10\"></textarea>\r\n      </div>\r\n       <button className=\"btn btn-primary mx-1\" onClick={handleUpClick}>Convert to Uppercase</button>\r\n       <button className=\"btn btn-primary mx-1\" onClick={handleloClick}>Convert to Lowercase</button>\r\n       <button className=\"btn btn-primary mx-1\" onClick={handleClearClick}>Clear all</button>\r\n       <button className=\"btn btn-primary mx-1\" onClick={handleCopyClick}>Copy</button>\r\n       <button className=\"btn btn-primary mx-1\" onClick={handleExtraSpace}>Remove Extra Spaces</button>\r\n    </div>\r\n    <div className={`container my-3 text-${props.TextColor}`}>\r\n      <h1>Text Summary</h1>\r\n      <p>{text.split(\" \").length} Words and {text.length} character</p>\r\n      <p>{0.008*text.split(\" \").length} min Required Reading Time</p>\r\n      <h2>Preview</h2>\r\n      <p>{text}</p>\r\n    </div>\r\n  </>\r\n  );\r\n}\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n    const capitalize = (word)=>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n    return (\r\n        props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n          <strong>{capitalize(props.alert.type)}</strong>: {props.alert.msg}\r\n       </div>\r\n    )\r\n}\r\n\r\nexport default Alert\r\n","import logo from './logo.svg';\nimport './App.css';\nimport Navbar from './Components/Navbar';\nimport About from './Components/About';\nimport TextForm from './Components/TextForm';\nimport React, { useState } from 'react';\nimport Alert from './Components/Alert';\n// import { Route, Switch } from \"react-router\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\n\n\n\n\n// let name = \"Krishna\";\nfunction App() {\n  const [Mode,setMode] = useState('light')\n  const [textColor,setTextColor] = useState('dark')\n  const [stext,setStext] = useState('Enable Dark Mode')\n  const [alert,setAlert] = useState(null)\n\n  const showAlert = (message,type)=>{\n    setAlert({\n      msg:message,\n      type: type,\n    })\n    setTimeout(() => {\n      setAlert(null)\n    }, 3000);\n  }\n\n  \n\n  const toggleMode = ()=>{\n     if(Mode === 'light'){\n       setMode('dark');\n       setTextColor('light'); \n       setStext('Disable Dark Mode');\n       document.body.style.backgroundColor = 'black';\n       showAlert(\"Dark Mode has enabled\",\"success\");\n       document.title = 'TextUtills-Dark Mode';\n      //  setInterval(() => {\n      //    document.title = 'TextUtills is amazing and very fast';\n      //  }, 1000);\n      //  setInterval(() => {\n      //   document.title = 'Install TextUtills now';\n      // }, 1500);\n     }\n     else{\n       setMode('light');\n       setTextColor('dark');\n       setStext('Enable Dark Mode');\n       document.body.style.backgroundColor = 'white';\n       showAlert(\"Light Mode has enabled\",\"success\");\n       document.title = 'TextUtills-Light Mode';\n     }\n  }\n\n  return (\n    <>\n    {/* <Router> */}\n    <Navbar title=\"TextUtils\" aboutUs=\"aboutKrishna\" Mode={Mode} toggleMode={toggleMode} TextColor={textColor} Stext={stext} />\n    <Alert alert={alert}/>\n    <div className={`container my-3 bg-${Mode}`}>\n    <TextForm heading=\"Enter Your Lovely Text\" Mode={Mode} TextColor={textColor} showAlert={showAlert}/>\n    {/* <Switch>\n      {/* /users ---> Component 1\n      /users/Home ---> Component 2 */}\n          {/* <Route exact path=\"/about\">\n            <About />\n          </Route>\n          <Route exact path=\"/\">\n          <TextForm heading=\"Enter Your Lovely Text\" Mode={Mode} TextColor={textColor} showAlert={showAlert}/>\n          </Route>\n    // </Switch> */} \n    {/* <Routes>\n          <Route path=\"./Components/About\" element={ <About/>} /> \n          <Route path=\"/TextForm\">\n            <TextForm heading=\"Enter Your Lovely Text\" Mode={Mode} TextColor={textColor} showAlert={showAlert}/>\n          </Route>\n          </Routes> */}\n    </div>\n    {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}